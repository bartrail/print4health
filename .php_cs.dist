<?php

declare(strict_types=1);

$finder = PhpCsFixer\Finder::create()
    ->in([
        __DIR__ . '/src',
        __DIR__ . '/tests',
    ])
    ->exclude([
        '__snapshots__',
        'Migrations',
    ])
    ->append([
        __FILE__,
        __DIR__ . '/bin/console',
        __DIR__ . '/public/index.php',
    ])
;

return PhpCsFixer\Config::create()
    ->setRules([
        '@PSR2' => true,
        '@PHP70Migration:risky' => true,
        '@PHP71Migration:risky' => true,
        '@PHP73Migration' => true,
        'array_indentation' => true,
        'array_syntax' => ['syntax' => 'short'],
        'compact_nullable_typehint' => true,
        'concat_space' => ['spacing' => 'one'],
        'declare_strict_types' => true,
        'is_null' => true,
        'modernize_types_casting' => true,
        'no_alternative_syntax' => true,
        'no_empty_phpdoc' => true,
        'no_empty_statement' => true,
        'no_unused_imports' => true,
        'no_useless_else' => true,
        'no_useless_return' => true,
        'no_superfluous_phpdoc_tags' => [
            'allow_mixed' => true,
            'allow_unused_params' => false,
            'remove_inheritdoc' => true,
        ]
        'ordered_imports' => [
            'imports_order' => ['const', 'class', 'function'],
        ],
        'phpdoc_order' => true,
        'single_blank_line_before_namespace' => true,
        'trailing_comma_in_multiline_array' => true,
        'visibility_required' => ['elements' => ['property', 'method', 'const']],
        'native_function_type_declaration_casing' => true,
        'yoda_style' => [
            'always_move_variable' => false,
            'equal' => false,
            'identical' => false,
            'less_and_greater' => false,
        ],
        'return_type_declaration' => ['space_before' => 'none'],
        'global_namespace_import' => [
            'import_classes' => true,
            'import_functions' => true,
            'import_constants' => true,
        ],
    ])
    ->setFinder($finder)
    ->setRiskyAllowed(true)
;
